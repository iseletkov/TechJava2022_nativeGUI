package ru.psu.techjava.viewmodels

import javafx.beans.property.SimpleBooleanProperty
import ru.psu.techjava.model.CStudent
import ru.psu.techjava.services.CServiceStudents
import tornadofx.*

/********************************************************************************************************
 * Модель представления для списка студентов.                                                           *
 * @author Селетков И.П. 2022 1128.                                                                     *
 *******************************************************************************************************/
class CViewModelStudentList                 : Controller()
{
    //Сервис с логикой для работы со списком студентов.
    private val serviceStudents             : CServiceStudents by inject()

    //Список студентов с возможность отслеживания изменений.
    val students                            = serviceStudents.getAll()

    //Факт наличия выделения в таблице.
    //От него зависит активность некоторых кнопок.
    val elementSelected                       = SimpleBooleanProperty(false)

    /****************************************************************************************************
     * Добавление пустой записи в таблицу.                                                              *
     ***************************************************************************************************/
    fun add()
    {
        serviceStudents.add(CStudent()) //Передача данных на сервер
    }
    /****************************************************************************************************
     * Удаление записи из списка.                                                                       *
     * @param item - элемент для удаления.                                                              *
     ***************************************************************************************************/
    fun delete(
        item                                : CStudent?
    )
    {
        //Если элемент не указан - ничего не делаем.
        item ?: return
        serviceStudents.delete(item) //Передача данных на сервер
    }
    /****************************************************************************************************
     * Обработка изменения выделенных элементов в списке.                                               *
     * @param selectedItem - выделенный элемент.                                                        *
     ***************************************************************************************************/
    fun onSelectionChange(
        selectedItem                        : CStudent?
    )
    {
        elementSelected.set(selectedItem != null)
    }
    /****************************************************************************************************
     * Отправка всех текущих данных из списка на сервер.                                                *
     ***************************************************************************************************/
    fun saveAll()
    {
        serviceStudents.saveAll() //Передача команды на отправку данных на сервер
    }

}